@model Contratos.App.ViewModels.ContratoViewModel



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ClienteId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ClienteId", (IEnumerable<SelectListItem>)ViewBag.ClienteId, new { @class = "form-control ClienteSelect2" })
                @Html.ValidationMessageFor(model => model.ClienteId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tipo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownList("Tipo", (IEnumerable<SelectListItem>)ViewBag.TipoContrato, new { @class = " form-control TipoContratoSelect2" })
                @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NomeArquivo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NomeArquivo, new { htmlAttributes = new { type = "file",  @accept = "application/pdf", @id = "Inputfile", @class= "custom-file-input" } })
                @Html.ValidationMessageFor(model => model.NomeArquivo, "", new { @class = "text-danger" })


            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantidade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantidade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantidade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MesAno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MesAno, new { htmlAttributes = new { @class = "form-control" ,type = "date" } })
                @Html.ValidationMessageFor(model => model.MesAno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Duracao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Duracao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Duracao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

    <link href="~/Content/css/select2.min.css" rel="stylesheet" />
    <script src="~/Scripts/select2.min.js"></script>

    <link href="~/Content/jQuery.FileUpload/css/jquery.fileupload.css" rel="stylesheet" />
    <script src="~/Scripts/jQuery.FileUpload/jquery.fileupload.js"></script>

    <script>



                //$('document').ready(function () {
                //    $(".ClienteSelect2").select2({
                //        placeholder: "Select Cliente",
                //        allowClear: true,
                //        theme: "classic",
                //        ajax: {
                //            url: "/Contrato/BuscarClientes",
                //            datatype: 'json',
                //            delay: 250,
                //            data: function (params) {
                //                return {
                //                    searchTerm: params.term
                //                };
                //            },
                //            processResult: function (data, params) {
                //                return {
                //                    results: data.results
                //                }
                //            }
                //        }
                //    });

                    //$(".TipoContratoSelect2").select2({
                    //    placeholder: "Selecione",
                    //    allowClear: true
                    //});



    </script>
}

